name: CI/CD

on: [push]

jobs:
  unittests:
    name: Unit Tests
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Set up JDK 1.11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: Unit Tests
      run: mvn --batch-mode -Dmaven.test.failure.ignore=true test

    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Maven Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: false
  
  sonarqube:
    name: sonarqube
    runs-on: ubuntu-latest
    steps:
      
    - name: Checkout Repo
      uses: actions/checkout@v3
    
    - name: Set up JDK 1.11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: SonarCloud Analysis        
      run: mvn sonar:sonar -Dsonar.projectKey=devsecops-wit -Dsonar.organization=devops-wit -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
 
  build_image:
    name: build_image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    
    - name: Build Docker Image
      run: docker build -t devops-wit-demo:${{ github.sha }} . 

  security_scans:
    name: Security Scans
    needs: build_image
    runs-on: ubuntu-latest
    permissions: 
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # for github/codeql-action/upload-sarif to get the Action run status 
    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]  
  
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"   

    - name: Trivy Repo vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        ignore-unfixed: true
        format: 'sarif'
        output: 'trivy-repo-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM,LOW'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-repo-results.sarif'
        category: repo-results

    - name: Trivy docker vulnerability scanner
      uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
      with:
        image-ref: 'devops-wit-demo:${{ github.sha }}'
        format: 'template'
        template: '@/contrib/sarif.tpl'
        output: 'trivy-docker-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM,LOW'

    - name: Upload Trivy Docker Scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-docker-results.sarif'
        category: docker-results

